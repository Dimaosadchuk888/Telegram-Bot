// –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
require('dotenv').config();
const { Pool } = require('pg');

async function migrateUsersTable() {
  console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã users –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...\n');

  const getDatabaseConfig = () => {
    const isProduction = process.env.NODE_ENV === 'production';
    const connectionString = isProduction 
      ? process.env.DATABASE_URL 
      : process.env.DATABASE_PUBLIC_URL || process.env.DATABASE_URL;

    return {
      connectionString,
      ssl: isProduction ? { rejectUnauthorized: false } : false,
    };
  };

  const pool = new Pool(getDatabaseConfig());

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    console.log('1. üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...');
    await pool.query('SELECT NOW()');
    console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    console.log('\n2. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
    const currentStructure = await pool.query(`
      SELECT column_name, data_type 
      FROM information_schema.columns 
      WHERE table_name = 'users' 
      ORDER BY ordinal_position;
    `);

    console.log('üìä –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
    currentStructure.rows.forEach(row => {
      console.log(`   - ${row.column_name}: ${row.data_type}`);
    });

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è
    const hasNewStructure = currentStructure.rows.some(row => row.column_name === 'telegram_id');
    const hasOldStructure = currentStructure.rows.some(row => row.column_name === 'user_id');

    if (hasNewStructure) {
      console.log('\n‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É–∂–µ –∏–º–µ–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
      return;
    }

    if (!hasOldStructure) {
      console.log('\n‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É');
      await createNewTable(pool);
      return;
    }

    // 4. –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    console.log('\n3. üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...');
    await performMigration(pool);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
  } finally {
    await pool.end();
  }
}

async function createNewTable(pool) {
  const createTableSQL = `
    CREATE TABLE IF NOT EXISTS users (
      id SERIAL PRIMARY KEY,
      telegram_id BIGINT UNIQUE NOT NULL,
      username TEXT,
      first_name TEXT,
      last_name TEXT,
      balance_uni NUMERIC(20, 6) DEFAULT 0,
      hold_balance NUMERIC(20, 6) DEFAULT 0,
      withdrawn_total NUMERIC(20, 6) DEFAULT 0,
      last_active TIMESTAMP DEFAULT NOW(),
      created_at TIMESTAMP DEFAULT NOW()
    );
  `;

  await pool.query(createTableSQL);
  console.log('‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞');
}

async function performMigration(pool) {
  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
  console.log('   - –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã...');
  await pool.query(`
    CREATE TABLE users_new (
      id SERIAL PRIMARY KEY,
      telegram_id BIGINT UNIQUE NOT NULL,
      username TEXT,
      first_name TEXT,
      last_name TEXT,
      balance_uni NUMERIC(20, 6) DEFAULT 0,
      hold_balance NUMERIC(20, 6) DEFAULT 0,
      withdrawn_total NUMERIC(20, 6) DEFAULT 0,
      last_active TIMESTAMP DEFAULT NOW(),
      created_at TIMESTAMP DEFAULT NOW()
    );
  `);

  // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã
  console.log('   - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
  await pool.query(`
    INSERT INTO users_new (telegram_id, username, balance_uni, hold_balance, withdrawn_total, created_at)
    SELECT 
      user_id as telegram_id,
      username,
      COALESCE(balance, 0) as balance_uni,
      COALESCE(hold_balance, 0) as hold_balance,
      COALESCE(total_earned, 0) as withdrawn_total,
      COALESCE(created_at, NOW()) as created_at
    FROM users
    ON CONFLICT (telegram_id) DO NOTHING;
  `);

  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é
  console.log('   - –ó–∞–º–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü—ã...');
  await pool.query('DROP TABLE users;');
  await pool.query('ALTER TABLE users_new RENAME TO users;');

  console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
migrateUsersTable();
