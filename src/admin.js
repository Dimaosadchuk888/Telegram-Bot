// –ë–∞–∑–æ–≤—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –±–æ—Ç–∞

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
const isAdmin = (userId) => {
  const adminIds = process.env.ADMIN_IDS ? process.env.ADMIN_IDS.split(',').map(id => parseInt(id.trim())) : [];
  return adminIds.includes(userId);
};

// –ü—Ä–æ—Å—Ç–∞—è –∞–¥–º–∏–Ω—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞
const handleAdmin = async (ctx) => {
  const userId = ctx.from.id;
  
  if (!isAdmin(userId)) {
    await ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω—Å–∫–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º');
    return;
  }
  
  await ctx.reply('üë®‚Äçüíº –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å\n\n–ü–æ–∫–∞ —á—Ç–æ –∑–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.');
};

module.exports = {
  isAdmin,
  handleAdmin
};
