// –ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –±–æ—Ç–∞

// –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
const handleStart = async (ctx) => {
  try {
  const userId = ctx.from.id;
  const username = ctx.from.username;
  const firstName = ctx.from.first_name;
    
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (@${username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞`);
    
    await ctx.reply('üëã –ü—Ä–∏–≤–µ—Ç! –Ø —á–∏—Å—Ç—ã–π Telegram –±–æ—Ç.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ handleStart:', error);
    await ctx.reply('üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
const handleText = async (ctx) => {
  const text = ctx.message.text;
  
  if (text !== '/start') {
    await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã');
  }
};

module.exports = {
  handleStart,
  handleText
};
